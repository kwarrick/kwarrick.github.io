<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strlen on warrick.io</title>
    <link>//warrick.io/tags/strlen/</link>
    <description>Recent content in Strlen on warrick.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Dec 2011 01:55:22 +0000</lastBuildDate>
    
	<atom:link href="//warrick.io/tags/strlen/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>slippy, do a barrel roll</title>
      <link>//warrick.io/posts/slippy-do-a-barrel-roll/</link>
      <pubDate>Mon, 05 Dec 2011 01:55:22 +0000</pubDate>
      
      <guid>//warrick.io/posts/slippy-do-a-barrel-roll/</guid>
      <description>Stumbled upon this in a stackoverflow answer. Naive C programmers write this sort of loop:
for (int cnt=0; cnt &amp;lt; strlen(s) ; cnt++) { /* some code */ } That&amp;rsquo;s logically an O(n2) algorithm because of the implementation of strlen().
Even though I know strlen is implemented very efficiently, let&amp;rsquo;s not do this.
http://stackoverflow.com/questions/111426/did-you-apply-computational-complexity-theory-in-real-life/111861#111861</description>
    </item>
    
  </channel>
</rss>