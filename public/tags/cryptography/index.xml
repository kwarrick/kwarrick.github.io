<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptography on warrick.io</title>
    <link>//warrick.io/tags/cryptography/</link>
    <description>Recent content in Cryptography on warrick.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Mar 2012 22:49:38 +0000</lastBuildDate>
    
	<atom:link href="//warrick.io/tags/cryptography/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>encrypt small files with ssh keys</title>
      <link>//warrick.io/posts/encrypt-small-files-with-ssh-keys/</link>
      <pubDate>Fri, 02 Mar 2012 22:49:38 +0000</pubDate>
      
      <guid>//warrick.io/posts/encrypt-small-files-with-ssh-keys/</guid>
      <description>Convert RSA public key and private key to PEM format:
$ openssl rsa -in ~/.ssh/id_rsa -outform pem &amp;gt; id_rsa.pem $ openssl rsa -in ~/.ssh/id_rsa -pubout -outform pem &amp;gt; id_rsa.pub.pem Encrypting a file with your public key:
$ openssl rsautl -encrypt -pubin -inkey id_rsa.pub.pem \ -in file.txt -out file.enc Decrypting the file with your private key:
$ openssl rsautl -decrypt -inkey id_rsa.pem \ -in file.enc -out file.txt Of course, this is asymmetric encryption and your file must be less than or equal in size to your key!</description>
    </item>
    
    <item>
      <title>Modes of Operation</title>
      <link>//warrick.io/posts/modes-of-operation/</link>
      <pubDate>Thu, 08 Dec 2011 02:48:06 +0000</pubDate>
      
      <guid>//warrick.io/posts/modes-of-operation/</guid>
      <description>Knowing which encryption algorithm was used is one thing, but knowing how they used it is another.
Here are 5 of the 9 NIST approved block cipher modes of operation:
Electronic Codebook (ECB)
Simplest of encryption modes.
Encrypts each block Bi independently.
 Encryption: **Ci = Ek(Bi)** Ci: ciphertext block i Ek: block encryption algorithm Bi: plaintext block i Decryption: **Bi = Dk(Ci)** Dk: decryption algorithm  Cipher-Block Chaining Mode (CBC)</description>
    </item>
    
  </channel>
</rss>